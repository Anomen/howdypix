### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type Album {
  dir: String!
  name: String!
  nbAlbums: Int!
  nbPhotos: Int!
  preview: String
  source: String!
}

"""
The type of message that the user can get when requesting a magic link.
"""
enum AuthEmailMessage {
  AUTH_EMAIL_ERR
  AUTH_EMAIL_ERR_NOT_EXIST
  AUTH_EMAIL_OK
}

type AuthEmailType {
  code: String
  messageData: String
  messageId: AuthEmailMessage!
}

type CurrentUserType {
  email: String!
  name: String!
}

type DateTaken {
  from: Float
  to: Float
}

type GetAlbumPhotos {
  album: Album
  albums: [Album!]!
  photos: [Photo]!
}

type GetFilters {
  cameraMakes: [String!]!
  cameraModels: [String!]!
  dateTakenRange: DateTaken!
}

type GetSearchPhotos {
  photos: [SearchPhoto]!
}

type GetTree {
  albums: [GetTreeAlbums!]!
  sources: [GetTreeSources!]!
}

type GetTreeAlbums {
  dir: String!
  nbAlbums: Int!
  nbImages: Int!
  parentDir: String
  preview: String
  source: String!
}

type GetTreeSources {
  name: String!
  nbAlbums: Int!
  nbImages: Int!
  preview: String
}

type Mutation {
  authEmail(email: String): AuthEmailType!
}

type Photo {
  birthtime: Float!
  file: ID!
  id: ID!
  thumbnails: [String]!
}

type PhotoDetail {
  aperture: Float!
  birthtime: Float!
  files: [String]!
  id: ID!
  iso: Float!
  make: String!
  model: String!
  next: String
  photoStream: [PhotoStreamThumbnail!]!
  previous: String
  shutter: Float!
}

input PhotosFilterBy {
  make: [String]
  model: [String]
}

"""The order of which the list is sorted"""
enum PhotosOrderBy {
  DATE_ASC
  DATE_DESC
  NAME_ASC
  NAME_DESC
}

type PhotoStreamThumbnail {
  file: ID!
  id: ID!
  thumbnails: [String!]!
}

type Query {
  getAlbum(album: String, source: String!): GetAlbumPhotos!
  getCurrentUser: CurrentUserType
  getFilters(album: String, filterBy: PhotosFilterBy, source: String!): GetFilters!
  getPhoto(album: String!, file: String!, filterBy: PhotosFilterBy, orderBy: PhotosOrderBy = DATE_DESC, source: String!): PhotoDetail
  getSearch(album: String, filterBy: PhotosFilterBy, orderBy: PhotosOrderBy = DATE_DESC, source: String): GetSearchPhotos!
  getSources: [Source]!
  getTree(album: String!, source: String!): GetTree!
}

type SearchAlbum {
  dir: String!
  name: String!
  nbAlbums: Int!
  nbPhotos: Int!
  preview: String
  source: String!
}

type SearchPhoto {
  birthtime: Float!
  file: String!
  id: ID!
  thumbnails: [String]!
}

type Source {
  name: String!
  nbAlbums: Int!
  nbPhotos: Int!
  preview: String
}
